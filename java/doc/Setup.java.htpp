#include<header.html>
<body>
<div id="docContent">
<pre>
<span class="code_comment_block">/*
 * Feynman Java Simulation Framework Sample Application
 *
 * $author: Wes Bailey$
 */</span>
<span class="code_package">import </span>java.util.Iterator;
<span class="code_package">import </span>feynman.framework.system.PhysicalConfiguration;
<span class="code_package">import </span>feynman.framework.system.PhysicalSystem;

<span class="code_comment_block">/**
 * This class implements the &lt;b&gt;PhysicalConfiguration&lt;/b&gt; to setup
 * the initial conditions of the simulation.
 */</span>
<span class="code">public</span> class Setup implements PhysicalConfiguration {
    
    <span class="code_comment">// ------------------------------------- instance variables.</span>
    private Iterator i;
    private Ball b;
    
    <span class="code_comment_block">/**
     * Set the &lt;b&gt;Ball&lt;/b&gt;'s initial height and velocity.  In a real
     * application these properties could be set from a properties
     * file so you would not need to recompile the application
     * every time the initial conditions changed.
     *
     * @param ps The &lt;b&gt;PhysicalSystem&lt;b&gt; containing the &lt;b&gt;Ball&lt;/b&gt;.
     */</span>
    <span class="code">public</span> void <span class="code_method">configure</span>(PhysicalSystem ps) {
        
        <span class="code_comment">// Retrieve the reference to the particle from the physical system.</span>
        i = ps.<span class="code_method">iterator</span>();
        b = (Ball) i.<span class="code_method">next</span>();
        
        <span class="code_comment">// Setup its intial height and velocity.</span>
        b.<span class="code_method">setY</span>(0.0);
        b.<span class="code_method">setVy</span>(10.0);
        
    }
    
}
</pre>
</div>
</body>
</html>
